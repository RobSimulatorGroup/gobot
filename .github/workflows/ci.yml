name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    env:
      CONAN_USER_HOME: ~/conan_data

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.1

    - name: Install dependencies
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt install -y libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxext-dev libxfixes-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev uuid-dev libxcb-util-dev autoconf libgl-dev

    - name: Set Conan cache
      uses: actions/cache@v3
      env:
        cache-name: cache-conan-packages
      with:
        path: ~/conan_data
        key: host-${{ runner.os }}-target-${{ runner.os }}-${{ hashFiles('conanfile.txt') }}
        restore-keys: |
          host-${{ runner.os }}-target-${{ runner.os }}-

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_EXPERIMENT=OFF -DBUILD_TESTS=On

    - name: Setup tmate session
      if: ${{ matrix.os == 'windows-latest' }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 30
        
    #- name: Build
    #   Build your program with the given configuration
    #  run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #   Execute tests defined by the CMake configuration.
    #   See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}
